const EMA = require('technicalindicators').EMA;


let supertrend = {
    upperBandBasic : 0,
    lowerBandBasic : 0,
    upperBand : 0,
    lowerBand : 0,
    supertrend : 0,
};
let lastSupertrend = {
    upperBandBasic : 0,
    lowerBandBasic : 0,
    upperBand : 0,
    lowerBand : 0,
    supertrend : 0,
};
let lastCandleClose = 0;

const check=(data, multiplier, atrPeriod)  =>{
  let result = [];
    data.forEach(candle => {
        
    var atrResult = calculateAverageTrueRange(data, atrPeriod);  
  
    supertrend.upperBandBasic = ((candle.high + candle.low) / 2) + (multiplier * atrResult[atrResult.length -1]);
    supertrend.lowerBandBasic = ((candle.high + candle.low) / 2) - (multiplier * atrResult[atrResult.length -1]);
  
    if(supertrend.upperBandBasic < lastSupertrend.upperBand || lastCandleClose > lastSupertrend.upperBand)
      supertrend.upperBand = supertrend.upperBandBasic; 
    else
      supertrend.upperBand = lastSupertrend.upperBand;
  
    if(supertrend.lowerBandBasic > lastSupertrend.lowerBand || lastCandleClose < lastSupertrend.lowerBand)
      supertrend.lowerBand = supertrend.lowerBandBasic; 
    else
      supertrend.lowerBand = lastSupertrend.lowerBand;
  
    if(lastSupertrend.supertrend == lastSupertrend.upperBand && candle.close <= supertrend.upperBand)
      supertrend.supertrend = supertrend.upperBand;
    else if(lastSupertrend.supertrend == lastSupertrend.upperBand && candle.close >= supertrend.upperBand)
      supertrend.supertrend = supertrend.lowerBand;
    else if(lastSupertrend.supertrend == lastSupertrend.lowerBand && candle.close >= supertrend.lowerBand)
      supertrend.supertrend = supertrend.lowerBand;
    else if(lastSupertrend.supertrend == lastSupertrend.lowerBand && candle.close <= supertrend.lowerBand)
      supertrend.supertrend = supertrend.upperBand;
    else
      supertrend.supertrend = 0
     
    if(candle.close > supertrend.supertrend){
    supertrend.trendDirection = 1 //uptrend
    // console.log("UPTREND", candle.close)
    }
  
    if(candle.close < supertrend.supertrend){
    supertrend.trendDirection = -1 //downdtrend
    // console.log("DOWNTREND",candle.close)

    }
  
    lastCandleClose = candle.close;
    lastSupertrend = {
      upperBandBasic : supertrend.upperBandBasic,
      lowerBandBasic : supertrend.lowerBandBasic,
      upperBand : supertrend.upperBand,
      lowerBand : supertrend.lowerBand,
      supertrend : supertrend.supertrend,
    };
    
    result.push(JSON.parse(JSON.stringify(supertrend)))
});

    // console.log(supertrend)
    return result;
  }

  const calculateAverageTrueRange = (data, atrPeriod) => {
    let atrData = [];
    for(let i=1; i< data.length; i++) {
       let TR = Math.max((data[i].high-data[i].low), (data[i].high - data[i-1].close), ( data[i-1].close-data[i].low))
      atrData.push(TR)
    }
    let truerange = EMA.calculate({values:atrData, period: atrPeriod})
    return truerange;

}
    

const returnSuperTrendData = (data, multiplier, period) => {
    let superTrendData = check(data, multiplier, period);
    return superTrendData;
    
}


module.exports = returnSuperTrendData;
